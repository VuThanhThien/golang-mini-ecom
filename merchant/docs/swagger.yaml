basePath: /api
definitions:
  github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.CategoryDTO:
    properties:
      description:
        type: string
      name:
        type: string
      parentId:
        type: integer
    required:
    - name
    type: object
  github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.CategoryListResponse:
    properties:
      categories:
        items:
          $ref: '#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.CategoryResponse'
        type: array
      total:
        type: integer
    type: object
  github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.CategoryResponse:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      parent_id:
        type: integer
    type: object
  github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.CreateMerchantInput:
    properties:
      description:
        type: string
      merchant_id:
        type: string
      name:
        type: string
    required:
    - merchant_id
    - name
    type: object
  github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.CreateProductDTO:
    properties:
      category_id:
        type: integer
      description:
        type: string
      merchant_id:
        type: integer
      name:
        type: string
      price:
        type: number
      sku:
        type: string
    required:
    - name
    - price
    - sku
    type: object
  github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.InventoryDTO:
    properties:
      quantity:
        type: integer
      variant_id:
        type: integer
    required:
    - quantity
    - variant_id
    type: object
  github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.ProductImageDTO:
    properties:
      image_url:
        type: string
      is_primary:
        type: boolean
      product_id:
        type: integer
    required:
    - image_url
    - is_primary
    - product_id
    type: object
  github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.VariantDTO:
    properties:
      description:
        type: string
      price:
        type: number
      product_id:
        type: integer
      variant_name:
        type: string
    required:
    - price
    - product_id
    - variant_name
    type: object
host: localhost:8001
info:
  contact: {}
  description: This is merchant golang server.
  title: Swagger Merchant API
  version: "1.0"
paths:
  /categories:
    get:
      consumes:
      - application/json
      description: List categories with optional filtering and pagination
      parameters:
      - in: query
        name: id
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: parent_id
        type: integer
      - default: 10
        example: 5
        in: query
        name: limit
        type: integer
      - default: 1
        example: 1
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.CategoryListResponse'
      summary: List categories
      tags:
      - Categories
    post:
      consumes:
      - application/json
      description: Create a new category with the given details
      parameters:
      - description: Category details
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.CategoryDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.CategoryDTO'
      summary: Create a new category
      tags:
      - Categories
  /categories/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a category by its ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: object
        "500":
          description: an error occurred during the modification
          schema:
            type: string
      summary: Delete a category by ID
      tags:
      - Categories
    get:
      consumes:
      - application/json
      description: Get a category by its ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Get a category by ID
      tags:
      - Categories
  /inventory:
    post:
      consumes:
      - application/json
      description: Create a new inventory with the given details
      parameters:
      - description: Inventory details
        in: body
        name: inventory
        required: true
        schema:
          $ref: '#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.InventoryDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.InventoryDTO'
      summary: Create a new inventory
      tags:
      - Inventory
  /inventory/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an inventory by its ID
      parameters:
      - description: Inventory ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete an inventory by ID
      tags:
      - Inventory
    get:
      consumes:
      - application/json
      description: Get an inventory by its ID
      parameters:
      - description: Inventory ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.InventoryDTO'
      summary: Get an inventory by ID
      tags:
      - Inventory
  /inventory/variant/{variant_id}:
    get:
      consumes:
      - application/json
      description: Get an inventory by its Variant ID
      parameters:
      - description: Variant ID
        in: path
        name: variant_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.InventoryDTO'
      summary: Get an inventory by Variant ID
      tags:
      - Inventory
  /merchants:
    post:
      consumes:
      - application/json
      description: CreateMerchant
      parameters:
      - description: merchant
        in: body
        name: merchant
        required: true
        schema:
          $ref: '#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.CreateMerchantInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - Bearer: []
      summary: CreateMerchant
      tags:
      - Merchants
  /merchants/{id}:
    get:
      consumes:
      - application/json
      description: GetMerchant
      parameters:
      - description: id
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - Bearer: []
      summary: GetMerchant
      tags:
      - merchants
  /merchants/merchant-id/{merchantID}:
    get:
      consumes:
      - application/json
      description: GetMerchantByMerchantID
      parameters:
      - description: merchantID
        in: path
        name: merchantID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - Bearer: []
      summary: GetMerchantByMerchantID
      tags:
      - merchants
  /product-images:
    post:
      consumes:
      - application/json
      description: Create a new product image with the given details
      parameters:
      - description: Product image details
        in: body
        name: productImage
        required: true
        schema:
          $ref: '#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.ProductImageDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.ProductImageDTO'
      summary: Create a new product image
      tags:
      - Product Images
  /product-images/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product image by its ID
      parameters:
      - description: Product image ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete a product image
      tags:
      - Product Images
    put:
      consumes:
      - application/json
      description: Update a product image by its ID
      parameters:
      - description: Product image ID
        in: path
        name: id
        required: true
        type: string
      - description: Product image details
        in: body
        name: productImage
        required: true
        schema:
          $ref: '#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.ProductImageDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.ProductImageDTO'
      summary: Update a product image
      tags:
      - Product Images
  /products:
    get:
      consumes:
      - application/json
      description: FilterProductsWithPagination
      parameters:
      - in: query
        name: category_id
        type: string
      - in: query
        name: max_price
        type: number
      - in: query
        name: min_price
        type: number
      - in: query
        name: name
        type: string
      - default: 10
        example: 5
        in: query
        name: limit
        type: integer
      - default: 1
        example: 1
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - Bearer: []
      summary: FilterProductsWithPagination
      tags:
      - Products
    post:
      consumes:
      - application/json
      description: CreateProduct
      parameters:
      - description: product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.CreateProductDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - Bearer: []
      summary: CreateProduct
      tags:
      - Products
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: DeleteProduct
      parameters:
      - description: id
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - Bearer: []
      summary: DeleteProduct
      tags:
      - Products
    get:
      consumes:
      - application/json
      description: GetProductByProductID
      parameters:
      - description: id
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - Bearer: []
      summary: GetProductByProductID
      tags:
      - Products
  /variants:
    post:
      consumes:
      - application/json
      description: Create a new variant with the given details
      parameters:
      - description: Variant details
        in: body
        name: variant
        required: true
        schema:
          $ref: '#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.VariantDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.VariantDTO'
      summary: Create a new variant
      tags:
      - Variants
  /variants/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a variant by its ID
      parameters:
      - description: Variant ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete a variant by ID
      tags:
      - Variants
    get:
      consumes:
      - application/json
      description: Get a variant by its ID
      parameters:
      - description: Variant ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.VariantDTO'
      summary: Get a variant by ID
      tags:
      - Variants
  /variants/product-id/{id}:
    get:
      consumes:
      - application/json
      description: Get a variant by its product ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.VariantDTO'
      summary: Get a variant by product ID
      tags:
      - Variants
  /variants/variant-name/{variantName}:
    get:
      consumes:
      - application/json
      description: Get a variant by its variant name
      parameters:
      - description: Variant Name
        in: path
        name: variantName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.VariantDTO'
      summary: Get a variant by variant name
      tags:
      - Variants
securityDefinitions:
  BasicAuth:
    type: basic
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
