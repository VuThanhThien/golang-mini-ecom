// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/categories": {
            "get": {
                "description": "List categories with optional filtering and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "List categories",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "parent_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "example": 5,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.CategoryListResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new category with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "parameters": [
                    {
                        "description": "Category details",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.CategoryDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.CategoryDTO"
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "description": "Get a category by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get a category by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a category by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "an error occurred during the modification",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/inventory": {
            "post": {
                "description": "Create a new inventory with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inventory"
                ],
                "summary": "Create a new inventory",
                "parameters": [
                    {
                        "description": "Inventory details",
                        "name": "inventory",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.InventoryDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.InventoryDTO"
                        }
                    }
                }
            }
        },
        "/inventory/variant/{id}": {
            "get": {
                "description": "Get an inventory by its Variant ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inventory"
                ],
                "summary": "Get an inventory by Variant ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Variant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.InventoryDTO"
                        }
                    }
                }
            }
        },
        "/inventory/{id}": {
            "get": {
                "description": "Get an inventory by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inventory"
                ],
                "summary": "Get an inventory by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Inventory ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.InventoryDTO"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an inventory by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inventory"
                ],
                "summary": "Delete an inventory by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Inventory ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/merchants": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "CreateMerchant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Merchants"
                ],
                "summary": "CreateMerchant",
                "parameters": [
                    {
                        "description": "merchant",
                        "name": "merchant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.CreateMerchantInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/merchants/merchant-id/{merchantID}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "GetMerchantByMerchantID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Merchants"
                ],
                "summary": "GetMerchantByMerchantID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Merchant ID",
                        "name": "merchantID",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/merchants/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "GetMerchant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Merchants"
                ],
                "summary": "GetMerchant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/product-images": {
            "post": {
                "description": "Create a new product image with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Images"
                ],
                "summary": "Create a new product image",
                "parameters": [
                    {
                        "description": "Product image details",
                        "name": "productImage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.ProductImageDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.ProductImageDTO"
                        }
                    }
                }
            }
        },
        "/product-images/{id}": {
            "put": {
                "description": "Update a product image by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Images"
                ],
                "summary": "Update a product image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product image ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product image details",
                        "name": "productImage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.ProductImageDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.ProductImageDTO"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a product image by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Images"
                ],
                "summary": "Delete a product image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product image ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/products": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "FilterProductsWithPagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "FilterProductsWithPagination",
                "parameters": [
                    {
                        "type": "string",
                        "name": "category_id",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "max_price",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "min_price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "example": 5,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "CreateProduct",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "CreateProduct",
                "parameters": [
                    {
                        "description": "product",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.CreateProductDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "GetProductByProductID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "GetProductByProductID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "DeleteProduct",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "DeleteProduct",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/variants": {
            "post": {
                "description": "Create a new variant with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Variants"
                ],
                "summary": "Create a new variant",
                "parameters": [
                    {
                        "description": "Variant details",
                        "name": "variant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.VariantDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.VariantDTO"
                        }
                    }
                }
            }
        },
        "/variants/product-id/{id}": {
            "get": {
                "description": "Get a variant by its product ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Variants"
                ],
                "summary": "Get a variant by product ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.VariantDTO"
                        }
                    }
                }
            }
        },
        "/variants/variant-name/{variantName}": {
            "get": {
                "description": "Get a variant by its variant name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Variants"
                ],
                "summary": "Get a variant by variant name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Variant Name",
                        "name": "variantName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.VariantDTO"
                        }
                    }
                }
            }
        },
        "/variants/{id}": {
            "get": {
                "description": "Get a variant by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Variants"
                ],
                "summary": "Get a variant by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Variant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.VariantDTO"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a variant by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Variants"
                ],
                "summary": "Delete a variant by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Variant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.CategoryDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parentId": {
                    "type": "integer"
                }
            }
        },
        "github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.CategoryListResponse": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.CategoryResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.CategoryResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "integer"
                }
            }
        },
        "github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.CreateMerchantInput": {
            "type": "object",
            "required": [
                "merchant_id",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "merchant_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.CreateProductDTO": {
            "type": "object",
            "required": [
                "name",
                "price",
                "sku"
            ],
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "merchant_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "sku": {
                    "type": "string"
                }
            }
        },
        "github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.InventoryDTO": {
            "type": "object",
            "required": [
                "quantity",
                "variant_id"
            ],
            "properties": {
                "quantity": {
                    "type": "integer"
                },
                "variant_id": {
                    "type": "integer"
                }
            }
        },
        "github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.ProductImageDTO": {
            "type": "object",
            "required": [
                "image_url",
                "is_primary",
                "product_id"
            ],
            "properties": {
                "image_url": {
                    "type": "string"
                },
                "is_primary": {
                    "type": "boolean"
                },
                "product_id": {
                    "type": "integer"
                }
            }
        },
        "github_com_VuThanhThien_golang-gorm-postgres_merchant_internal_models_dto.VariantDTO": {
            "type": "object",
            "required": [
                "price",
                "product_id",
                "variant_name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "product_id": {
                    "type": "integer"
                },
                "variant_name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        },
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8001",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Swagger Merchant API",
	Description:      "This is merchant golang server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
